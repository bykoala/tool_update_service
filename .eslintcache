[{"D:\\coding\\company\\react_tus\\src\\index.js":"1","D:\\coding\\company\\react_tus\\src\\reportWebVitals.js":"2","D:\\coding\\company\\react_tus\\src\\App.js":"3","D:\\coding\\company\\react_tus\\src\\views\\config\\homepage_config.js":"4","D:\\coding\\company\\react_tus\\src\\routes\\index.js":"5","D:\\coding\\company\\react_tus\\src\\components\\Frame\\Index.js":"6","D:\\coding\\company\\react_tus\\src\\components\\Nav\\NavLineComponent.js":"7","D:\\coding\\company\\react_tus\\src\\views\\PageNotFound.js":"8","D:\\coding\\company\\react_tus\\src\\views\\AutoTestPlan.js":"9","D:\\coding\\company\\react_tus\\src\\views\\ContactMe.js":"10","D:\\coding\\company\\react_tus\\src\\views\\Updatelist.js":"11","D:\\coding\\company\\react_tus\\src\\views\\Release.js":"12","D:\\coding\\company\\react_tus\\src\\utils\\request.js":"13","D:\\coding\\company\\react_tus\\src\\views\\admin\\config\\adminpage_config.js":"14","D:\\coding\\company\\react_tus\\src\\views\\admin\\AdminPage.js":"15"},{"size":2473,"mtime":1612495400569,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":2118,"mtime":1611844180000,"results":"19","hashOfConfig":"17"},{"size":2561,"mtime":1612501577649,"results":"20","hashOfConfig":"17"},{"size":1217,"mtime":1612495175901,"results":"21","hashOfConfig":"17"},{"size":1176,"mtime":1612495383556,"results":"22","hashOfConfig":"17"},{"size":1734,"mtime":1611736134000,"results":"23","hashOfConfig":"17"},{"size":319,"mtime":1612495540922,"results":"24","hashOfConfig":"17"},{"size":230,"mtime":1612495530057,"results":"25","hashOfConfig":"17"},{"size":168,"mtime":1611736220000,"results":"26","hashOfConfig":"17"},{"size":4046,"mtime":1612495962455,"results":"27","hashOfConfig":"17"},{"size":6763,"mtime":1612495847837,"results":"28","hashOfConfig":"17"},{"size":2022,"mtime":1612495510256,"results":"29","hashOfConfig":"17"},{"size":2545,"mtime":1612501570166,"results":"30","hashOfConfig":"17"},{"size":1533,"mtime":1612495204177,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"14wi3od",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\coding\\company\\react_tus\\src\\index.js",[],["65","66"],"D:\\coding\\company\\react_tus\\src\\reportWebVitals.js",[],"D:\\coding\\company\\react_tus\\src\\App.js",[],"D:\\coding\\company\\react_tus\\src\\views\\config\\homepage_config.js",[],"D:\\coding\\company\\react_tus\\src\\routes\\index.js",[],"D:\\coding\\company\\react_tus\\src\\components\\Frame\\Index.js",[],"D:\\coding\\company\\react_tus\\src\\components\\Nav\\NavLineComponent.js",[],"D:\\coding\\company\\react_tus\\src\\views\\PageNotFound.js",[],"D:\\coding\\company\\react_tus\\src\\views\\AutoTestPlan.js",[],"D:\\coding\\company\\react_tus\\src\\views\\ContactMe.js",[],"D:\\coding\\company\\react_tus\\src\\views\\Updatelist.js",["67"],"import { Card } from \"antd\";\nimport { getRequest } from \"../utils/request\";\nimport React from 'react';\n// import { ConsoleSqlOutlined } from \"@ant-design/icons\";\n// import download from \"../assert/img/download.png\";\nimport { Input } from 'antd';\nimport { Drawer, Button } from 'antd';\n\nclass ShowUpdateComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      hid: true,\n      hidCount: 0,\n    }\n  }\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  showMd5 = () => {\n    this.setState({\n      hidCount: this.state.hidCount + 1,\n      hid: this.state.hidCount % 2 === 0 ? false : true,\n    })\n  }\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"site-drawer-render-in-current-wrapper\" disable=\"inline-block\" style={{\n          \"position\": \"relative\",\n          \"height\": \"200px\",\n          \"padding\": \" 48px\",\n          \"overflow\": \"hidden\",\n          \"text-align\": \"center\",\n          \"background\": \"#fafafa\",\n          \"border\": \" 1px solid #ebedf0\",\n          \"border-radius\": \"2px\",\n        }}>\n\n          <div style={{\n            \"margin-top\": \"30px\",\n          }}>\n\n            <span disable=\"inline-block\" style={{\n              \"font-size\": \"20px\",\n              \"letter-spacing\": 0,\n              // \"margin-right\": \"0px\",\n              \"margin-left\": \"-100px\",\n              \"position\": \"relative\",\n              \"font-family\": \"PingFangSC-Regular, Microsoft Yahei, Tahoma,sans-serif\"\n            }}>\n              {this.props.version} | {this.props.createTime} | {this.props.fileSize}MB |\n          <span onClick={this.showMd5}\n                style={{\n                  \"font-weight\": \"bold\"\n                }}\n              > md5\n          </span>\n              <Button type=\"primary\" style={{ marginLeft: \"10px\" }} disable=\"inline-block\">\n                <a href={this.props.fileUrl}>下载</a>\n              </Button>\n              <Button type=\"primary\" onClick={this.showDrawer} style={{ marginLeft: \"10px\" }} disable=\"inline-block\">\n                版本特性\n          </Button>\n              <h3 hidden={this.state.hid} style={{ marginRight: \"190px\",marginTop:\"10px\" ,\"color\":\"#747d8c\"}} >{this.props.md5}</h3>\n            </span>\n          </div>\n\n          <Drawer\n            placement=\"right\"\n            closable={false}\n            onClose={this.onClose}\n            visible={this.state.visible}\n            getContainer={false}\n            style={{ position: 'absolute' }}\n          >\n            {this.props.content}\n          </Drawer>\n        </div>\n        {/* <Divider> </Divider> */}\n      </>\n    )\n  }\n}\n\nclass Updatelist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comps: [],\n      data: {}\n    }\n  }\n  // componentWillMount() {\n  //   getRequest(\"/getUpdateHistory\", this.receiveData)\n  // }\n\n  componentDidMount() {\n    getRequest(\"/getUpdateHistory\", this.receiveData)\n  }\n  receiveData = (data) => {\n    this.setState({\n      data: data\n    });\n\n    const loopGetData = data;\n\n    let compsbox = [];\n    for (let k in loopGetData.data) {\n      //时间切割\n      let createTime = loopGetData.data[k].CreateTime.slice(0, 10)\n      compsbox.push(\n        <ShowUpdateComponent\n          version={loopGetData.data[k].Version}\n          fileSize={loopGetData.data[k].Size}\n          createTime={createTime}\n          md5={loopGetData.data[k].Md5}\n          fileUrl={loopGetData.data[k].Url}\n          content={loopGetData.data[k].Content} />\n      );\n    }\n    this.setState({\n      comps: compsbox\n    });\n  }\n\n  render() {\n\n    const MainComponent = () => <div>\n      {/* <ShowUpdateComponent /> */}\n      {this.state.comps}\n\n    </div>\n    const { comps } = this.state;\n    return (\n      <Card\n        style={{\n          padding: \"10px\",\n          width: 1000,\n        }}\n      >\n        <MainComponent key={comps} />\n      </Card>\n    )\n  }\n\n\n}\nexport default Updatelist","D:\\coding\\company\\react_tus\\src\\views\\Release.js",["68","69","70","71"],"import React, {useState, useEffect } from 'react';\r\nimport { Form, Input, Upload, message, Button, Radio, Card, } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport { getRequest,postRequest } from \"../utils/request\";\r\n\r\nfunction Release() {\r\n    const [version, setVersion] = useState(null);\r\n    const [md5, setMd5] = useState(null);\r\n    const [fileSize, setFileSize] = useState(0);\r\n    const [fileUrl, setFileUrl] = useState(null);\r\n    const [hid, setHid] = useState(true)\r\n    // useEffect(() => {  请求数据 }, [ ])    这种会在组件第一次加载的时候触发，以后不会\r\n    // 当我们第二个参数传一个空数组[]时，相当于只在首次渲染的时候执行。\r\n    //调用就接口，获取后台已存在的最新版本\r\n    // const getRelease = (url) => {\r\n    //     return fetch(url, {\r\n    //         method: 'GET',\r\n    //         headers: {\r\n    //             'Accept': 'application/json',\r\n    //             'Content-Type': 'application/json'\r\n    //         }\r\n    //     }).then(res => res.json())\r\n    //         .then(json => {\r\n    //             console.log(json)\r\n    //             if (json.code == 10000) {\r\n    //                 setVersion(json.version)\r\n    //             } else if (json.code == 10001) {\r\n    //                 console.log(\"请求失败\")\r\n    //             }\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.log('异常！！！', err);\r\n    //         })\r\n    // }\r\n  //请求当前系统上存在的最新版本号\r\n    // useEffect(() => { getRelease(\"http://111.229.251.110:8088/release\") }, [])\r\n    // useEffect(() => { getRequest(\"/release\",getLatestVersion)}, [])\r\n    useEffect(\r\n        () => {\r\n            function getLatestVersion(ret){\r\n                setVersion(ret.version)\r\n            }\r\n             getRequest(\"/release\",getLatestVersion)\r\n            }, [])\r\n\r\n    let versionElement =  React.useRef();\r\n    let contentElement =  React.useRef();\r\n    let data = null\r\n    const onFinish = (values: any) => {\r\n        //通过ref取标签的值\r\n        // data = JSON.stringify({\r\n        //     \"version\": versionElement.current.props.value,\r\n        //     \"content\": contentElement.current.resizableTextArea.props.value,\r\n        // })\r\n\r\n          data = JSON.stringify({\r\n            \"version\": values.version,\r\n            \"content\": values.content,\r\n            \"forced\": values.forcUpdate,\r\n            \"size\": parseFloat(fileSize),\r\n            \"md5\": md5,\r\n            \"url\": fileUrl,\r\n            \"classification\":1   //图片归类：1:发布上传源文件；0:头像之类的图片文件\r\n        })\r\n        postRequest(\"/update\", data)\r\n\r\n      };\r\n\r\n    const props = {\r\n        name: \"file\",\r\n        action: \"http://192.168.40.138:8088/upload\",\r\n        headers: {\r\n            authorization: \"authorization-text\",\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                console.log(info.file, info.fileList);\r\n            }\r\n            if (info.file.status === \"done\") {\r\n                setMd5(info.file.response.md5)\r\n                let size = (Math.round(info.file.response.size / 1024 / 1024 * 100) / 100)\r\n                setFileSize(size)\r\n                setFileUrl(info.file.response.url)\r\n                message.success(`${info.file.name} file uploaded successfully`);\r\n                setHid(false)\r\n            } else if (info.file.status === \"error\") {\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n    };\r\n    const { TextArea } = Input;\r\n    const onChange = (e) => {\r\n        console.log(\"radio checked\", e.target.value);\r\n        setValue(e.target.value);\r\n    };\r\n    //单选默认值\r\n    const [value, setValue] = React.useState(null);\r\n    const [form] = Form.useForm();\r\n    const onReset = () => {\r\n        form.resetFields();\r\n    };\r\n\r\n    const tailLayout = {\r\n        wrapperCol: { offset: 8, span: 16 },\r\n    };\r\n\r\n\r\n  \r\n    //表单验证\r\n    const validateMessages = {\r\n        required: '${label} is required!',\r\n        types: {\r\n            email: '${label} is not a valid email!',\r\n            number: '${label} is not a valid number!',\r\n        },\r\n        number: {\r\n            range: '${label} must be between ${min} and ${max}',\r\n        },\r\n    };\r\n    return (\r\n        <Card style={{padding: \"10px\",width: 1000,}}>\r\n            <>\r\n                <Form validateMessages={validateMessages} onFinish={onFinish} onReset={onReset}>\r\n                    <Form.Item label='已有版本:'>\r\n                        <Input disabled value={version}></Input>\r\n                    </Form.Item>\r\n                    <Form.Item name={'version'} label='当前版本:' rules={[{ required: true }]}   >\r\n                         <Input ref={versionElement}/>\r\n                    </Form.Item>\r\n                    <Form.Item label='上传文件' name={'file'} rules={[{ required: true }]} >\r\n                        <Upload {...props}>\r\n                            <Button icon={<UploadOutlined />}>\r\n                                Click to Upload\r\n                            </Button>\r\n                        </Upload>\r\n                    </Form.Item>\r\n                    <Form.Item label='文件信息' hidden={hid}>\r\n\r\n                        <span >文件url:</span>\r\n                        <label id='furl' >{fileUrl}</label><br />\r\n                        <span>文件大小:</span>\r\n                        <label id='fsize'>{fileSize}MB</label> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <span >md5:</span>\r\n                        <label id='fmd5'>{md5}</label>\r\n                    </Form.Item>\r\n                    <Form.Item label='强制更新' name='forcUpdate'>\r\n                        <Radio.Group onChange={onChange} name={'forced'} value={value} id='forced'>\r\n                            <Radio value={0}>否</Radio>\r\n                            <Radio value={1}>是</Radio>\r\n                        </Radio.Group>\r\n                    </Form.Item>\r\n                    <Form.Item label='更新内容' name={'content'} rules={[{ required: true }]}>\r\n                        <TextArea rows={4} ref={contentElement}/>\r\n                    </Form.Item>\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type='primary' htmlType='submit'>\r\n                            发布\r\n                        </Button>\r\n                        <Button htmlType='button'>\r\n                            取消\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Release;\r\n","D:\\coding\\company\\react_tus\\src\\utils\\request.js",[],"D:\\coding\\company\\react_tus\\src\\views\\admin\\config\\adminpage_config.js",[],"D:\\coding\\company\\react_tus\\src\\views\\admin\\AdminPage.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":6,"column":10,"nodeType":"78","messageId":"79","endLine":6,"endColumn":15},{"ruleId":"80","severity":1,"message":"81","line":111,"column":19,"nodeType":"82","messageId":"83","endLine":111,"endColumn":42},{"ruleId":"80","severity":1,"message":"81","line":113,"column":20,"nodeType":"82","messageId":"83","endLine":113,"endColumn":52},{"ruleId":"80","severity":1,"message":"81","line":114,"column":21,"nodeType":"82","messageId":"83","endLine":114,"endColumn":54},{"ruleId":"80","severity":1,"message":"81","line":117,"column":20,"nodeType":"82","messageId":"83","endLine":117,"endColumn":64},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation"]